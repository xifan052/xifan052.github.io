"use strict";(self.webpackChunkxifan_blog=self.webpackChunkxifan_blog||[]).push([[4787],{9839:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>c,data:()=>i});var e=a(641);const t=[(0,e.Fv)('<h2 id="一、生命周期的三个阶段-旧" tabindex="-1"><a class="header-anchor" href="#一、生命周期的三个阶段-旧"><span>一、生命周期的三个阶段（旧）</span></a></h2><p><strong>1.初始化阶段</strong>：由 ReactDOM.render()触发---初次渲染</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token number">1.</span> <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 初始化</span>\n\n<span class="token number">2.</span> <span class="token function">componentWillMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 挂载之前(废弃)</span>\n\n<span class="token number">3.</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 完成渲染</span>\n\n<span class="token number">4.</span> <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 挂载完成</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.更新阶段</strong>：由组件内部 this.setData()或父组件重新 render 触发</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token number">1.</span> <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 是否更新state</span>\n\n<span class="token number">2.</span> <span class="token function">componentWillUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 更新之前(废弃)</span>\n\n<span class="token number">3.</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 完成渲染</span>\n\n<span class="token number">4.</span> <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 更新完成</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3.卸载组件</strong>：由 ReactDOM.unmountComponentAtNode()触发</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token number">1.</span> <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 卸载之前</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="二、生命周期的三个阶段-新" tabindex="-1"><a class="header-anchor" href="#二、生命周期的三个阶段-新"><span>二、生命周期的三个阶段（新）</span></a></h2><p><img src="/xifan052/assets/react/lifeCycle.jpg" alt=" "></p><p><strong>1.初始化阶段</strong>：由 ReactDOM.render()触发---初次渲染</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token number">1.</span> <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 初始化</span>\n\n<span class="token number">2.</span> <span class="token function">getDerivedStateFromProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 需要让state的值由props决定的时候可以使用（没啥用）</span>\n\n<span class="token number">3.</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 完成渲染</span>\n\n<span class="token number">4.</span> <span class="token function">componentDidMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 挂载完成</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.更新阶段</strong>：由组件内部 this.setData()或父组件重新 render 触发</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token number">1.</span> getDerivedStateFromProps\n\n<span class="token number">2.</span> <span class="token function">shouldComponentUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 是否更新state</span>\n\n<span class="token number">3.</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 完成渲染</span>\n\n<span class="token number">4.</span> <span class="token function">getSnapshotBeforeUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 在呈现DOM之前被调用。用于在DOM更新后存储状态的先前值。返回的任何值都将用作componentDidUpdate()方法的参数。此功能始终与componentDidUpdate()方法一起使用，反之亦然。</span>\n\n<span class="token number">4.</span> <span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 更新完成</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3.卸载组件</strong>：由 ReactDOM.unmountComponentAtNode()触发</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token number">1.</span> <span class="token function">componentWillUnmount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 卸载之前</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="三、废弃的钩子" tabindex="-1"><a class="header-anchor" href="#三、废弃的钩子"><span>三、废弃的钩子</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token number">1.</span> <span class="token function">componentWillMount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 挂载之前(废弃)</span>\n\n<span class="token number">2.</span> <span class="token function">componentWillReceiveProps</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 将要接收新的props</span>\n\n<span class="token number">3.</span> <span class="token function">componentWillUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 更新之前(废弃)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',17)],p={},c=(0,a(6262).A)(p,[["render",function(n,s){return(0,e.uX)(),(0,e.CE)("div",null,t)}]]),i=JSON.parse('{"path":"/blogs/note/react/5.reactdeshengmingzhouqi.html","title":"5.react的生命周期","lang":"en-US","frontmatter":{"title":"5.react的生命周期","date":"2019-04-23T00:00:00.000Z","categories":["note"],"tags":["React"]},"headers":[{"level":2,"title":"一、生命周期的三个阶段（旧）","slug":"一、生命周期的三个阶段-旧","link":"#一、生命周期的三个阶段-旧","children":[]},{"level":2,"title":"二、生命周期的三个阶段（新）","slug":"二、生命周期的三个阶段-新","link":"#二、生命周期的三个阶段-新","children":[]},{"level":2,"title":"三、废弃的钩子","slug":"三、废弃的钩子","link":"#三、废弃的钩子","children":[]}],"git":{"createdTime":1737108179000,"updatedTime":1737108179000,"contributors":[{"name":"稀饭","email":"lixifan@ane56.com","commits":1}]},"filePathRelative":"blogs/note/react/5.react的生命周期.md"}')}}]);