"use strict";(self.webpackChunkxifan_blog=self.webpackChunkxifan_blog||[]).push([[316],{294:(a,e,n)=>{n.r(e),n.d(e,{comp:()=>j,data:()=>M});var s=n(641);const l=n.p+"assets/img/4123b5909344479abaa69658fa21c493~tplv-k3u1fbpfcp-watermark.a4485a48.png",i=n.p+"assets/img/d9d78c7c4bbf43b297c24dc671049505~tplv-k3u1fbpfcp-watermark.538d9cec.png",t=n.p+"assets/img/1258d005b70d4d38837b45edff6f156e~tplv-k3u1fbpfcp-watermark.ac269286.png",p=n.p+"assets/img/72629d440a954fcebf6144d91a2268a1~tplv-k3u1fbpfcp-watermark.88379bb0.png",c=n.p+"assets/img/5d5fdac2903a4a74b2ef1aca133b7e9c~tplv-k3u1fbpfcp-watermark.32b44981.png",r=n.p+"assets/img/b89daf34a11a4a73a018b233dd5a27e3~tplv-k3u1fbpfcp-watermark.57692af0.png",d=n.p+"assets/img/6cd3d298e30a468c82fff9716cbca909~tplv-k3u1fbpfcp-watermark.fef8f413.png",o=n.p+"assets/img/5af4c9a632cb41d287ebb0d900b7198c~tplv-k3u1fbpfcp-watermark.560747e2.png",u=n.p+"assets/img/73006b94f9ae4b63a168bd5aa7dab4a4~tplv-k3u1fbpfcp-watermark.d16d849c.png",g=n.p+"assets/img/6e8847b5ef0343cf977f230b3eee9743~tplv-k3u1fbpfcp-watermark.f35369b3.png",m=n.p+"assets/img/7d39fd8fcc6a40629dfb9683b4a352a6~tplv-k3u1fbpfcp-watermark.436e22d6.png",v=n.p+"assets/img/61117146d62f45658735a092be274a3f~tplv-k3u1fbpfcp-watermark.a461da69.png",b=n.p+"assets/img/b22ea4eb3c124c60aeed0cc1b47700c7~tplv-k3u1fbpfcp-watermark.f3e1c9d4.png",k=n.p+"assets/img/53f9124d9d75459fbb869d154965f826~tplv-k3u1fbpfcp-watermark.502341ca.png",h=n.p+"assets/img/ebd5cbfdffa64a95bc337939bd27afd2~tplv-k3u1fbpfcp-watermark.5061e606.png",f=n.p+"assets/img/ef3df781d0874a3aa47614993bad0475~tplv-k3u1fbpfcp-watermark.b2a76a43.png",x=n.p+"assets/img/827fbb94c5694255b764dedbf4efe394~tplv-k3u1fbpfcp-watermark.a3de6c7f.png",_=n.p+"assets/img/90010a85749d40d693e2c4f632959715~tplv-k3u1fbpfcp-watermark.848168df.png",w=n.p+"assets/img/6c7104826b1f407e901d3c9023fb1899~tplv-k3u1fbpfcp-watermark.f10c5c60.png",y=n.p+"assets/img/ef3547b2fca044f58ba397026aab7e82~tplv-k3u1fbpfcp-watermark.f5be148e.png",q=n.p+"assets/img/65b22541b659423495c10de5a2aab082~tplv-k3u1fbpfcp-watermark.30ee48aa.png",O=n.p+"assets/img/9096a0241a074146b5e1234aff338760~tplv-k3u1fbpfcp-watermark.d62781ca.png",L=n.p+"assets/img/6270e2ea6b5c4b38821c745489588610~tplv-k3u1fbpfcp-watermark.a68fee23.png",E=n.p+"assets/img/0c37866b60a94adda1adb3d4543ae226~tplv-k3u1fbpfcp-watermark.82247d9d.png",I=n.p+"assets/img/fb60f3e64c5e44a6abc8b707da31e985~tplv-k3u1fbpfcp-watermark.301237c7.png",T=n.p+"assets/img/695994fa0754466989286f68afaa7b0f~tplv-k3u1fbpfcp-watermark.7147e1f9.png",D=n.p+"assets/img/b22bd2c3ab164a5788ba947663e4c610~tplv-k3u1fbpfcp-watermark.040ba748.png",z=n.p+"assets/img/348054f82a224ce2ba596e2b223c0d38~tplv-k3u1fbpfcp-watermark.1eb1ce0c.png",A=n.p+"assets/img/47f53d33e40f4d31b1ff7d1ac7da6a79~tplv-k3u1fbpfcp-watermark.cf2b248d.png",P=n.p+"assets/img/e26285a459364614bb53ad78a641316a~tplv-k3u1fbpfcp-watermark.9de1d350.png",V=(0,s.Lk)("h2",{id:"一、前期准备",tabindex:"-1"},[(0,s.Lk)("a",{class:"header-anchor",href:"#一、前期准备"},[(0,s.Lk)("span",null,"一、前期准备")])],-1),C={href:"https://customerconnect.vmware.com/en/downloads/info/slug/desktop_end_user_computing/vmware_workstation_player/16_0",target:"_blank",rel:"noopener noreferrer"},F={href:"http://mirrors.163.com/centos/7/isos/x86_64/",target:"_blank",rel:"noopener noreferrer"},R=(0,s.Lk)("code",null,".torrent",-1),N=(0,s.Fv)('<h2 id="二、安装centos7系统" tabindex="-1"><a class="header-anchor" href="#二、安装centos7系统"><span>二、安装centos7系统</span></a></h2><h3 id="_1-创建新的虚拟机" tabindex="-1"><a class="header-anchor" href="#_1-创建新的虚拟机"><span>1. 创建新的虚拟机</span></a></h3><p>菜单栏&gt;找到文件&gt;点击“新建虚拟机”</p><p><img src="'+l+'" alt="image.png"></p><p><img src="'+i+'" alt="image.png"></p><p><img src="'+t+'" alt="image.png"></p><p><img src="'+p+'" alt="image.png"></p><p><img src="'+c+'" alt="image.png"></p><p><img src="'+r+'" alt="image.png"></p><p><img src="'+d+'" alt="image.png"></p><p>跟着提示下一步就行了，一直到设置磁盘</p><h3 id="_2-配置磁盘" tabindex="-1"><a class="header-anchor" href="#_2-配置磁盘"><span>2. 配置磁盘</span></a></h3><p><img src="'+o+'" alt="image.png"></p><p><img src="'+u+'" alt="image.png"></p><h3 id="_3-安装系统" tabindex="-1"><a class="header-anchor" href="#_3-安装系统"><span>3. 安装系统</span></a></h3><ol><li>编辑虚拟机设置&gt;硬件&gt;CD/DVD(IDE)&gt;选中“使用ISO映像文件”&gt;选择你的CentOS系统</li></ol><p><img src="'+g+'" alt="image.png"></p><ol start="2"><li>启动虚拟机，点击“开启此虚拟机”。</li></ol><p>鼠标点击虚拟机空白处&gt;用键盘的↑键选中“Install Cent0S 7”&gt;按回车，进入系统配置界面；</p><p><img src="'+m+'" alt="image.png"></p><p><img src="'+v+'" alt="image.png"></p><p><img src="'+b+'" alt="image.png"></p><ol start="3"><li>设置日期和时间，鼠标点击中国的位置&gt;City搜索框输入“shanghai(上海)”按回车键，小红点会自动定位在上海坐标&gt;最后把时间设置成24小时制</li></ol><p><img src="'+k+'" alt="image.png"></p><ol start="4"><li>选择系统环境，这里虚拟机就选择图形界面了，一般服务器是选择默认最小安装</li></ol><p><img src="'+h+'" alt="image.png"></p><ol start="5"><li>选择磁盘</li></ol><p><img src="'+f+'" alt="image.png"></p><p><img src="'+x+'" alt="image.png"></p><ol start="6"><li>开启网络</li></ol><p><img src="'+_+'" alt="image.png"></p><p><img src="'+w+'" alt="image.png"></p><p><img src="'+y+'" alt="image.png"></p><ol start="7"><li>设置root密码和设置用户</li></ol><p><img src="'+q+'" alt="image.png"></p><p><img src="'+O+'" alt="image.png"></p><p>重启完之后先设置接受许可证，点击右下角的finish就进入下一步设置</p><p><img src="'+L+'" alt="image.png"></p><p>接下来就是一直点右上角的next和skip就好了</p><p>记得最后要用root用户进入系统，不然会有很多权限问题</p><h3 id="_4-网卡配置" tabindex="-1"><a class="header-anchor" href="#_4-网卡配置"><span>4. 网卡配置</span></a></h3><p>终端输入<code>ifconfig</code>,查看网卡信息</p><p><img src="'+E+'" alt="image.png"></p><p>查看网卡设备配置信息</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/sysconfig/network-scripts/ifcfg-ens*（*根据实际情况不同，这里为ens33，就是上图中箭头指向的网卡名称）\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认的配置信息如下</p><div class="language-ini line-numbers-mode" data-ext="ini" data-title="ini"><pre class="language-ini"><code><span class="token key attr-name">TYPE</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">Ethernet</span>&quot;</span>\n<span class="token key attr-name">PROXY_METHOD</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">none</span>&quot;</span>\n<span class="token key attr-name">BROWSER_ONLY</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">no</span>&quot;</span>\n<span class="token key attr-name">BOOTPROTO</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">dhcp</span>&quot;</span>\n<span class="token key attr-name">DEFROUTE</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">yes</span>&quot;</span>\n<span class="token key attr-name">IPV4_FAILURE_FATAL</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">no</span>&quot;</span>\n<span class="token key attr-name">IPV6INIT</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">yes</span>&quot;</span>\n<span class="token key attr-name">IPV6_AUTOCONF</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">yes</span>&quot;</span>\n<span class="token key attr-name">IPV6_DEFROUTE</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">yes</span>&quot;</span>\n<span class="token key attr-name">IPV6_FAILURE_FATAL</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">no</span>&quot;</span>\n<span class="token key attr-name">IPV6_ADDR_GEN_MODE</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">stable-privacy</span>&quot;</span>\n<span class="token key attr-name">NAME</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">ens33</span>&quot;</span>\n<span class="token key attr-name">UUID</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">68c0ad50-b291-4ef9-aec0-24c5a6819005</span>&quot;</span>\n<span class="token key attr-name">DEVICE</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">ens33</span>&quot;</span>\n<span class="token key attr-name">ONBOOT</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">yes</span>&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改网卡配置</p><div class="language-ini line-numbers-mode" data-ext="ini" data-title="ini"><pre class="language-ini"><code>//修改以下内容 \n<span class="token key attr-name">BOOTPROTO</span><span class="token punctuation">=</span><span class="token value attr-value">static  //启用静态IP地址</span> \n\n//添加以下内容\n<span class="token key attr-name">IPADDR</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.19.130      //设置IP地址 这里地址和上面ifconfig图里面箭头指向的IP地址</span>\n<span class="token key attr-name">NETMASK</span><span class="token punctuation">=</span><span class="token value attr-value">255.255.255.0   //子网掩码</span> \n<span class="token key attr-name">GATEWAY</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.19.2   //设置网关 网关地址在点击虚拟机最上一排菜单 -&gt; 编辑 -&gt; 虚拟网络编辑器 -&gt; NAT设置查看</span>\n<span class="token key attr-name">DNS1</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.19.2 // DNS地址，和上面的网关地址一致</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改完毕后，<code>按 esc 进入到 命令模式, 按住 shift + : 键, 接着再输入 wq, wq是保存并退出, q就是表示退出</code>，最后重启网卡。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>systemctl restart network\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但是我这重启网卡也没用，最后重启系统了🤪</p><h2 id="三、安装nginx" tabindex="-1"><a class="header-anchor" href="#三、安装nginx"><span>三、安装nginx</span></a></h2><p>创建nginx目录<code>mkdir nginx &amp;&amp; cd nginx</code></p><h3 id="_1-安装nginx依赖-pcre" tabindex="-1"><a class="header-anchor" href="#_1-安装nginx依赖-pcre"><span>1. 安装nginx依赖：pcre</span></a></h3><ol><li>下载pcre</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">wget</span> http://downloads.sourceforge.net/project/pcre/pcre/8.37/pcre-8.37.tar.gz\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>解压pcre</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xzpvf</span> pcre-8.37.tar.gz\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>进入 pcre-8.37 执行命令</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./configure\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>执行命令</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>验证pcre是否成功</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pcre-config <span class="token parameter variable">--version</span>\n<span class="token comment"># 出现版本号就是安装成功了</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-安装-openssl-、zlib-、-gcc-依赖" tabindex="-1"><a class="header-anchor" href="#_2-安装-openssl-、zlib-、-gcc-依赖"><span>2. 安装 openssl 、zlib 、 gcc 依赖</span></a></h3><p>运行命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> <span class="token function">make</span> zlib zlib-devel gcc-c++ libtool openssl openssl-devel\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-安装nginx" tabindex="-1"><a class="header-anchor" href="#_3-安装nginx"><span>3. 安装nginx</span></a></h3><ol><li>进入之前创建的nginx目录：下载nginx</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">wget</span> http://nginx.org/download/nginx-1.20.1.tar.gz\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>解压nginx</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> nginx-1.20.1.tar.gz\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>进入nginx-1.20.1目录，执行</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./configure\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>编译</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> <span class="token function">install</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4-启动nginx" tabindex="-1"><a class="header-anchor" href="#_4-启动nginx"><span>4. 启动nginx</span></a></h3><p>进入<code>/usr/local/nginx/sbin</code>，启动nginx</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/nginx/sbin\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>./nginx\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看nginx是否启动</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> nginx\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="'+I+'" alt="image.png"></p><h3 id="_5-访问nginx" tabindex="-1"><a class="header-anchor" href="#_5-访问nginx"><span>5. 访问nginx</span></a></h3><p>浏览器输入服务器ip+80端口：例如：192.168.1.12:80,出现如下界面为成功</p><p><img src="'+T+'" alt="image.png"></p><h3 id="_6-打开80端口" tabindex="-1"><a class="header-anchor" href="#_6-打开80端口"><span>6. 打开80端口</span></a></h3><p>因为nginx初始配置启动的是80端口，系统设置默认都是关闭的，运行命令开启80端口</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">80</span>/tcp <span class="token parameter variable">--permanent</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行完出现success之后，重启防火墙配置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--reload</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过查看系统开放的端口号，来检查配置是否生效</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>firewall-cmd --list-all\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="'+D+'" alt="image.png"></p><h2 id="四、部署应用" tabindex="-1"><a class="header-anchor" href="#四、部署应用"><span>四、部署应用</span></a></h2><h3 id="_1-复制打包文件" tabindex="-1"><a class="header-anchor" href="#_1-复制打包文件"><span>1. 复制打包文件</span></a></h3><p>其实就是把vue的打包文件复制到nginx的html目录里面😁😁</p><p><img src="'+z+'" alt="image.png"></p><h3 id="_2-设置history路由" tabindex="-1"><a class="header-anchor" href="#_2-设置history路由"><span>2. 设置History路由</span></a></h3><p>路由设置History模式之后，浏览器刷新页面会出现404的情况，这里就还需要再配置下nginx</p><p>首先打开nginx的配置文件 <img src="'+A+'" alt="image.png"></p><p>这里就根据官网来进行设置，把代码复制到config里面</p><div class="language-ini line-numbers-mode" data-ext="ini" data-title="ini"><pre class="language-ini"><code><span class="token comment"># 这个配置的意思就是无法访问路径时，根据设置的文件顺序来匹配进行访问</span>\nlocation / {\n  try_files $uri $uri/ /index.html;\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="'+P+'" alt="image.png"></p><p>保存之后，终端进入<code>/usr/local/nginx/sbin</code>目录，<code>./nginx -s reload</code>重启nginx;</p><p>到这，一个完整的部署流程就完毕了😉</p><p>因为只是本地部署，所以这里还忽略了很多细节，用最快的方式来做的环境搭建，可以访问下面的链接来看更详细的内容哦</p><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接"><span>参考链接</span></a></h2>',109),S={href:"https://blog.csdn.net/plj5201314/article/details/123706734",target:"_blank",rel:"noopener noreferrer"},W={href:"https://blog.csdn.net/liuxin6611532/article/details/123007599",target:"_blank",rel:"noopener noreferrer"},U={},j=(0,n(6262).A)(U,[["render",function(a,e){const n=(0,s.g2)("ExternalLinkIcon");return(0,s.uX)(),(0,s.CE)("div",null,[V,(0,s.Lk)("ul",null,[(0,s.Lk)("li",null,[(0,s.eW)("虚拟机："),(0,s.Lk)("a",C,[(0,s.eW)("VMware16"),(0,s.bF)(n)])]),(0,s.Lk)("li",null,[(0,s.eW)("Linux："),(0,s.Lk)("a",F,[(0,s.eW)("CentOS-7"),(0,s.bF)(n)]),(0,s.eW)("（可以先下载"),R,(0,s.eW)("后缀的种子文件，再使用迅雷下载，下载速度会更快）")])]),N,(0,s.Lk)("ul",null,[(0,s.Lk)("li",null,[(0,s.Lk)("a",S,[(0,s.eW)("Centos系统上nginx安装"),(0,s.bF)(n)])]),(0,s.Lk)("li",null,[(0,s.Lk)("a",W,[(0,s.eW)("虚拟机安装CentOS7系统及常用工具配置"),(0,s.bF)(n)])])])])}]]),M=JSON.parse('{"path":"/blogs/article/7.shiyongxunijidajianbendifuwuqilaibushuyigeVueyingyong/shiyongxunijidajianbendifuwuqilaibushuyigeVueyingyong.html","title":"使用虚拟机搭建本地服务器来部署一个Vue应用","lang":"en-US","frontmatter":{"title":"使用虚拟机搭建本地服务器来部署一个Vue应用","categories":["article"],"tags":["运维"],"date":"2022-08-23T00:00:00.000Z"},"headers":[{"level":2,"title":"一、前期准备","slug":"一、前期准备","link":"#一、前期准备","children":[]},{"level":2,"title":"二、安装centos7系统","slug":"二、安装centos7系统","link":"#二、安装centos7系统","children":[{"level":3,"title":"1. 创建新的虚拟机","slug":"_1-创建新的虚拟机","link":"#_1-创建新的虚拟机","children":[]},{"level":3,"title":"2. 配置磁盘","slug":"_2-配置磁盘","link":"#_2-配置磁盘","children":[]},{"level":3,"title":"3. 安装系统","slug":"_3-安装系统","link":"#_3-安装系统","children":[]},{"level":3,"title":"4. 网卡配置","slug":"_4-网卡配置","link":"#_4-网卡配置","children":[]}]},{"level":2,"title":"三、安装nginx","slug":"三、安装nginx","link":"#三、安装nginx","children":[{"level":3,"title":"1. 安装nginx依赖：pcre","slug":"_1-安装nginx依赖-pcre","link":"#_1-安装nginx依赖-pcre","children":[]},{"level":3,"title":"2. 安装 openssl 、zlib 、 gcc 依赖","slug":"_2-安装-openssl-、zlib-、-gcc-依赖","link":"#_2-安装-openssl-、zlib-、-gcc-依赖","children":[]},{"level":3,"title":"3. 安装nginx","slug":"_3-安装nginx","link":"#_3-安装nginx","children":[]},{"level":3,"title":"4. 启动nginx","slug":"_4-启动nginx","link":"#_4-启动nginx","children":[]},{"level":3,"title":"5. 访问nginx","slug":"_5-访问nginx","link":"#_5-访问nginx","children":[]},{"level":3,"title":"6. 打开80端口","slug":"_6-打开80端口","link":"#_6-打开80端口","children":[]}]},{"level":2,"title":"四、部署应用","slug":"四、部署应用","link":"#四、部署应用","children":[{"level":3,"title":"1. 复制打包文件","slug":"_1-复制打包文件","link":"#_1-复制打包文件","children":[]},{"level":3,"title":"2. 设置History路由","slug":"_2-设置history路由","link":"#_2-设置history路由","children":[]}]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1737108179000,"updatedTime":1737108179000,"contributors":[{"name":"稀饭","email":"lixifan@ane56.com","commits":1}]},"filePathRelative":"blogs/article/7.使用虚拟机搭建本地服务器来部署一个Vue应用/使用虚拟机搭建本地服务器来部署一个Vue应用.md"}')}}]);