"use strict";(self.webpackChunkxifan_blog=self.webpackChunkxifan_blog||[]).push([[4258],{4979:(e,a,l)=>{l.r(a),l.d(a,{comp:()=>n,data:()=>r});var i=l(641);const t=[(0,i.Fv)('<h2 id="vue、react和angular对比" tabindex="-1"><a class="header-anchor" href="#vue、react和angular对比"><span>Vue、React和Angular对比</span></a></h2><ul><li>Angular提供的更多是一整套的解决方案，前两种更像是一个生态</li><li>Vue和React目前都使用了Virtual Dom（虚拟DOM）</li><li>Vue性能优于React</li></ul><h3 id="vue" tabindex="-1"><a class="header-anchor" href="#vue"><span>Vue</span></a></h3><ul><li>模板和渲染函数的弹性选择(函数和模板都是分离的，写法优雅)</li><li>简单的语法及项目创建</li><li>更快的渲染速度和更小的体积(vue.js的体积也非常小)</li></ul><h3 id="react" tabindex="-1"><a class="header-anchor" href="#react"><span>React</span></a></h3><ul><li>更适用于大型应用和更好的可测试性</li><li>同时适用于web端和原生App (提供了react native)</li><li>更大的生态圈带来更多支持和工具 (有一个开发团队进行支持)</li></ul><h3 id="vue和react相同点" tabindex="-1"><a class="header-anchor" href="#vue和react相同点"><span>Vue和React相同点</span></a></h3><ul><li>利用虚拟DOM实现快速渲染(vue2.0才实现虚拟DOM，虚拟DOM：js在内存里面构建一个类似于DOM的对象，去模拟DOM拼装数据，拼装完之后直接渲染在页面中。在内存中构建是非常快的)</li><li>轻量级</li><li>响应式组件(当修改数据，视图会进行更新)</li><li>服务端渲染(服务器直接返回 html 文本给浏览器，但是性能开销大，一般首屏或者部分首屏)</li><li>易于集成路由工具，打包工具以及状态管理工具</li><li>优秀的支持和社区</li></ul>',8)],u={},n=(0,l(6262).A)(u,[["render",function(e,a){return(0,i.uX)(),(0,i.CE)("div",null,t)}]]),r=JSON.parse('{"path":"/blogs/note/vue/1.vuekuangjiaduibi.html","title":"1.vue框架对比","lang":"en-US","frontmatter":{"title":"1.vue框架对比","date":"2017-05-21T00:00:00.000Z","categories":["note"],"tags":["Vue"]},"headers":[{"level":2,"title":"Vue、React和Angular对比","slug":"vue、react和angular对比","link":"#vue、react和angular对比","children":[{"level":3,"title":"Vue","slug":"vue","link":"#vue","children":[]},{"level":3,"title":"React","slug":"react","link":"#react","children":[]},{"level":3,"title":"Vue和React相同点","slug":"vue和react相同点","link":"#vue和react相同点","children":[]}]}],"git":{"createdTime":1737108179000,"updatedTime":1737108179000,"contributors":[{"name":"稀饭","email":"lixifan@ane56.com","commits":1}]},"filePathRelative":"blogs/note/vue/1.vue框架对比.md"}')}}]);