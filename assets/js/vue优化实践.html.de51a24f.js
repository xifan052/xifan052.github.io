"use strict";(self.webpackChunkxifan_blog=self.webpackChunkxifan_blog||[]).push([[8577],{533:(n,a,s)=>{s.r(a),s.d(a,{comp:()=>L,data:()=>w});var e=s(641);const l={href:"https://segmentfault.com/a/1190000016816813",target:"_blank",rel:"noopener noreferrer"},p=(0,e.Fv)('<li><p>① hard-source-webpack-plugin(为模块提供中间缓存步骤)</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>  <span class="token doc-comment comment">/**\n   * 简介\n   * HardSourceWebpackPlugin是webpack的插件，为模块提供中间缓存步骤。为了查看结果，您需要使用此插件运行webpack两次：第一次构建将花费正常的时间。第二次构建将显着加快（大概提升90%的构建速度）。\n   * 安装\n   * 使用npm install --save-dev hard-source-webpack-plugin或安装yarn add --dev hard-source-webpack-plugin。\n   * 配置\n   * 在vue.config.js里面添加代码\n  */</span>\n  <span class="token keyword">const</span> HardSourceWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;hard-source-webpack-plugin&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 引入包</span>\n  <span class="token comment">// 添加配置</span>\n  module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n      <span class="token function-variable function">configureWebpack</span><span class="token operator">:</span> <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">!==</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n              config<span class="token punctuation">.</span>plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>\n                  <span class="token keyword">new</span> <span class="token class-name">HardSourceWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n              <span class="token punctuation">)</span>\n          <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// vue-cli 4.x 配置</span>\n  <span class="token keyword">const</span> HardSourceWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;hard-source-webpack-plugin&quot;</span><span class="token punctuation">)</span>\n  module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">configureWebpack</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 缓存dll,优化编译速度</span>\n        <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">HardSourceWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>',1),i=(0,e.Fv)('<h2 id="_1-均衡页面加载文件的大小和数量" tabindex="-1"><a class="header-anchor" href="#_1-均衡页面加载文件的大小和数量"><span>1.均衡页面加载文件的大小和数量</span></a></h2><ul><li><p>① 项目中小图片图片转base64，通过工具如webpack进行图片压缩，文件进行压缩混淆等</p></li><li><p>② 路由懒加载，异步路由</p></li><li><p>③ 第三方依赖按需加载，比如使用element-ui框架，但是里面的组件只用到了其中一部分，可以单独建一个引入element组件的文件，在里面引入我们项目中需要的组件，然后vue.use它</p></li><li><p>④ 通过webpack进行处理，有一个externals属性，可以在里面设置不需要打包的文件，比如可以设置将vue、vue-router、element-ui等等设置进去，打包的时候就不会打包他们，然后将vue、vue-router、element-ui等资源在html中引入</p></li><li><p>⑤ 可以借助开启gzip压缩文件，减小文件大小</p></li><li><p>⑥ build关闭sourceMap减小包体积</p></li></ul><h2 id="_2-数据请求优化" tabindex="-1"><a class="header-anchor" href="#_2-数据请求优化"><span>2.数据请求优化</span></a></h2><ul><li><p>① 减少请求数量，增加已请求的数据不再重新请求的判断</p></li><li><p>② 尽可能的使用前端功能完成如排序、筛选之类的功能</p></li></ul><h2 id="_3-交互视觉提升" tabindex="-1"><a class="header-anchor" href="#_3-交互视觉提升"><span>3.交互视觉提升</span></a></h2><ul><li><p>① 使用loading动画</p></li><li><p>② 详情-列表场景可以详情操作列表页面提前完成数据更新，或者将详情数据缓存到本地</p></li><li><p>③ 资源加载前后使用骨架屏、占位符的方式，优先加载可视区域数据</p></li></ul><h2 id="_4-善用vue的一些属性" tabindex="-1"><a class="header-anchor" href="#_4-善用vue的一些属性"><span>4.善用vue的一些属性</span></a></h2><ul><li><p>① v-if和v-show的合理使用</p></li><li><p>② keep-live</p></li></ul><h2 id="_4-代码优化" tabindex="-1"><a class="header-anchor" href="#_4-代码优化"><span>4.代码优化</span></a></h2>',9),t=(0,e.Lk)("li",null,[(0,e.Lk)("p",null,"① 提取公共组件，进行组件拆分")],-1),c=(0,e.Lk)("li",null,[(0,e.Lk)("p",null,"② 减少watch的数据量")],-1),u=(0,e.Lk)("li",null,[(0,e.Lk)("p",null,"③ 访问次数多的data属性在方法中使用变量存储")],-1),o=(0,e.Lk)("li",null,[(0,e.Lk)("p",null,"④ 使用频率较少的组件使用局部引入，减小verdor.js体积")],-1),r=(0,e.Lk)("li",null,[(0,e.Lk)("p",null,"⑤ 避免template中使用复杂的表达式，尽可能的写到methonds和computed 中")],-1),k={href:"https://www.jianshu.com/p/56168a779849",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Lk)("li",null,[(0,e.Lk)("p",null,"⑦ 避免持久化 Store 数据带来的性能问题，localstorage 写入是同步的，而且存在不小的性能开销，如果你想打造 60fps 的应用，就必须避免频繁写入持久化数据")],-1),v=(0,e.Lk)("h2",{id:"使用插件",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#使用插件"},[(0,e.Lk)("span",null,"使用插件")])],-1),b=(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,"① 对于渲染大量数据可以使用虚拟滚动，使用第三方提供的库vue-virtual-scroller")],-1),m=(0,e.Lk)("h2",{id:"参考",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#参考"},[(0,e.Lk)("span",null,"参考")])],-1),h={href:"https://juejin.im/post/5b960fcae51d450e9d645c5f",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.cnblogs.com/xsilence/p/10916845.html",target:"_blank",rel:"noopener noreferrer"},f={},L=(0,s(6262).A)(f,[["render",function(n,a){const s=(0,e.g2)("ExternalLinkIcon");return(0,e.uX)(),(0,e.CE)("div",null,[(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.Lk)("p",null,[(0,e.Lk)("a",l,[(0,e.eW)("webpack优化"),(0,e.bF)(s)])])]),p]),i,(0,e.Lk)("ul",null,[t,c,u,o,r,(0,e.Lk)("li",null,[(0,e.Lk)("p",null,[(0,e.eW)("⑥ 可以通过"),(0,e.Lk)("a",k,[(0,e.eW)("Object.freeze()"),(0,e.bF)(s)]),(0,e.eW)(" 阻止Vue对这些数据添加双向数据绑定来提高一些性能")])]),d]),v,b,m,(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.Lk)("p",null,[(0,e.Lk)("a",h,[(0,e.eW)("Vue 应用性能优化指南"),(0,e.bF)(s)])])]),(0,e.Lk)("li",null,[(0,e.Lk)("p",null,[(0,e.Lk)("a",g,[(0,e.eW)("vue页面性能优化方案"),(0,e.bF)(s)])])])])])}]]),w=JSON.parse('{"path":"/blogs/note/vue/vueyouhuashijian.html","title":"vue的项目优化","lang":"en-US","frontmatter":{"title":"vue的项目优化","date":"2020-03-19T00:00:00.000Z","categories":["note"],"tags":["Vue","性能优化"]},"headers":[{"level":2,"title":"1.均衡页面加载文件的大小和数量","slug":"_1-均衡页面加载文件的大小和数量","link":"#_1-均衡页面加载文件的大小和数量","children":[]},{"level":2,"title":"2.数据请求优化","slug":"_2-数据请求优化","link":"#_2-数据请求优化","children":[]},{"level":2,"title":"3.交互视觉提升","slug":"_3-交互视觉提升","link":"#_3-交互视觉提升","children":[]},{"level":2,"title":"4.善用vue的一些属性","slug":"_4-善用vue的一些属性","link":"#_4-善用vue的一些属性","children":[]},{"level":2,"title":"4.代码优化","slug":"_4-代码优化","link":"#_4-代码优化","children":[]},{"level":2,"title":"使用插件","slug":"使用插件","link":"#使用插件","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1737108179000,"updatedTime":1737108179000,"contributors":[{"name":"稀饭","email":"lixifan@ane56.com","commits":1}]},"filePathRelative":"blogs/note/vue/vue优化实践.md"}')}}]);