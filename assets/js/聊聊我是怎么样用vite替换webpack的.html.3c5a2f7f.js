"use strict";(self.webpackChunkxifan_blog=self.webpackChunkxifan_blog||[]).push([[2799],{560:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>k,data:()=>v});var e=a(641);const t=a.p+"assets/img/60345b9a1c274d8bb11ae80eb0c28d21_tplv-k3u1fbpfcp-jj-mark_0_0_0_0_q75.99e26f28.png",p=(0,e.Lk)("h2",{id:"前言",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#前言"},[(0,e.Lk)("span",null,"前言")])],-1),o=(0,e.Lk)("p",null,[(0,e.eW)("都已经 2202 年了，"),(0,e.Lk)("code",null,"vite"),(0,e.eW)("已经可以算是遍地开花了，这两年的关注度也比较高究其原因，还是因为苦"),(0,e.Lk)("code",null,"webpack"),(0,e.eW)("久矣；")],-1),i=(0,e.Lk)("p",null,"随着项目功能越来越多，代码越来越复杂，随之而来的就是项目的各种慢（ps:跑个项目的时间都能去茶水间打杯水回来喝一会儿了 😭😭😭）",-1),l=(0,e.Lk)("code",null,"webpack",-1),c=(0,e.Lk)("code",null,"vite",-1),r={href:"https://vitejs.cn/guide/why.html#why-vite",target:"_blank",rel:"noopener noreferrer"},d=(0,e.Fv)('<h2 id="开搞" tabindex="-1"><a class="header-anchor" href="#开搞"><span>开搞</span></a></h2><p>开始进入正题</p><h3 id="_1-修改项目配置" tabindex="-1"><a class="header-anchor" href="#_1-修改项目配置"><span>1. 修改项目配置</span></a></h3><p>终端输入<code>npm i -D vite</code>安装 vite</p><p>修改<code>pageage.json</code>中的相关命令</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token string-property property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span>\n<span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite build&quot;</span><span class="token punctuation">,</span>\n<span class="token string-property property">&quot;serve&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite preview&quot;</span><span class="token punctuation">,</span>\n<span class="token string-property property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint --ext .js,.vue --ignore-path .gitignore --fix src&quot;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-在根目录创建vite-config-js文件" tabindex="-1"><a class="header-anchor" href="#_2-在根目录创建vite-config-js文件"><span>2. 在根目录创建<code>vite.config.js</code>文件</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createVuePlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite-plugin-vue2&#39;</span>\n<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token string">&#39;./&#39;</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">createVuePlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 启动完成之后自动打开浏览器</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">find</span><span class="token operator">:</span> <span class="token string">&#39;@&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">replacement</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span> <span class="token comment">// 使用这种方式可以引入.vue文件，但是图片会404</span>\n      <span class="token punctuation">{</span>\n        <span class="token literal-property property">find</span><span class="token operator">:</span> <span class="token string">&#39;/@&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">replacement</span><span class="token operator">:</span> <span class="token string">&#39;src&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 解决图片使用别名404，@符号前面需要加&#39;/&#39;,也没有用绝对路径</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-修改环境变量" tabindex="-1"><a class="header-anchor" href="#_3-修改环境变量"><span>3. 修改环境变量</span></a></h3><p>在 vite 中已经不支持原来的<code>process.env</code>来访问环境变量了</p><p>需要改为<code>import.meta.env</code>来访问，在.env 文件中的变量也需要把前缀改为<code>VITE_</code>（ps:也可以通过在<code>vite.config</code>中设置<code>envPrefix</code>来自定义前缀）</p><p>如以下代码：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token constant">VITE_APP_API_URL</span><span class="token operator">=</span><span class="token operator">/</span>api\n<span class="token constant">VITE_TITLE</span><span class="token operator">=</span>title\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-配置全局的-css-变量" tabindex="-1"><a class="header-anchor" href="#_4-配置全局的-css-变量"><span>4. 配置全局的 css 变量</span></a></h3><p>在<code>vue-cli</code>中是借助了<code>style-resources-loader</code>来实现的全局变量，在<code>vite</code>中直接通过  <code>css.preprocessorOptions</code>  就可以进行配置</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">preprocessorOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">less</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">additionalData</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">@import &#39;./src/assets/style/variables.less&#39;;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-修改-index-html-文件" tabindex="-1"><a class="header-anchor" href="#_5-修改-index-html-文件"><span>5. 修改 index.html 文件</span></a></h3><p>首先将<code>public</code>文件夹下的<code>index.html</code>移动到根目录</p><p>在<code>index.html</code>中引入 src 目录下的<code>main.js</code>文件</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;module&quot;</span> src<span class="token operator">=</span><span class="token string">&quot;/src/main.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>还有一个就是 vite 默认不支持 ejs 的语法（ps:其实有尝试用过<code>vite-plugin-html</code>插件，但是会启动报错 😛😛），在当前项目中也没有实际性的意义，就不折腾啦，所以改为了原生写法</p><div class="language-diff line-numbers-mode" data-ext="diff" data-title="diff"><pre class="language-diff"><code><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> &lt;link rel=&quot;icon&quot; href=&quot;&lt;%= BASE_URL %&gt;favicon.ico&quot;&gt;\n</span><span class="token prefix deleted">-</span><span class="token line"> &lt;title&gt;&lt;%= VUE_APP_NAME %&gt;&lt;/title&gt;\n</span></span># 改为了下面这样\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> &lt;link rel=&quot;icon&quot; href=&quot;./favicon.ico&quot;&gt;\n</span><span class="token prefix inserted">+</span><span class="token line"> &lt;title&gt;Title&lt;/title&gt;\n</span></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>做完上面几步，就可以输入<code>npm run dev</code>来运行项目了</p><h2 id="遇到的一些问题" tabindex="-1"><a class="header-anchor" href="#遇到的一些问题"><span>遇到的一些问题</span></a></h2><h3 id="_1-typeerror-failed-to-fetch-dynamically-imported-module" tabindex="-1"><a class="header-anchor" href="#_1-typeerror-failed-to-fetch-dynamically-imported-module"><span>1. TypeError: Failed to fetch dynamically imported module</span></a></h3><p>原因的话是因为<code>vite</code>不支持对<code>.vue</code>后缀的识别，在引入组件的文件路径上补充<code>.vue</code>后缀就好啦</p><h3 id="_2-不支持require" tabindex="-1"><a class="header-anchor" href="#_2-不支持require"><span>2. 不支持require</span></a></h3><p>这里就分两种情况；</p><p>第一种是部分插件用require来引入的，统一改为 import；</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// const CodeMirror = require(&#39;codemirror/lib/codemirror&#39;)</span>\n<span class="token comment">// require(&#39;codemirror/addon/hint/show-hint&#39;)</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> CodeMirror <span class="token keyword">from</span> <span class="token string">&#39;codemirror/lib/codemirror&#39;</span>\n<span class="token keyword">import</span> <span class="token string">&#39;codemirror/addon/hint/show-hint&#39;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二种就是针对元素标签中图片引入，通过在全局重写声明一个<code>require</code>方法来引入图片</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 因为只有图片引入还在使用require，所以就只用于图片引入了</span>\nwindow<span class="token punctuation">.</span><span class="token function-variable function">require</span> <span class="token operator">=</span> <span class="token parameter">url</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> url <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>\n  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>href\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是！！！</p><p>在<code>typescript</code>项目中还是会提示<code>require</code>不存在😩😩，<code>eslint</code>的检测过不去；后面就只能找费劲巴拉的尝试，最后借助<code>unplugin-auto-import</code>插件来完成方法的自动引入；</p><p>首先在utils中封装一个引用图片的方法，和之前的方法差不多，只是这里因为图片都会放在同一个文件夹，所以就把前面的路径部分也加上去了</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token comment">// utils/index.ts</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">importAssetsImg</span> <span class="token operator">=</span> <span class="token punctuation">(</span>path<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token constant">URL</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> path <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token constant">URL</span></span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">../assets/images/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>href\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后在<code>vite.config.ts</code>添加<code>unplugin-auto-import</code>的相关配置</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> AutoImport <span class="token keyword">from</span> <span class="token string">&quot;unplugin-auto-import/vite&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">AutoImport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    imports<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token string-property property">&#39;@/utils&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">&#39;importAssetsImg&#39;</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// 等同于 import { importAssetsImg } from &#39;@/utils&#39;</span>\n    eslintrc<span class="token operator">:</span> <span class="token punctuation">{</span>\n      enabled<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      filepath<span class="token operator">:</span> <span class="token string">&quot;./.eslintrc-auto-import.json&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 生成eslint配置</span>\n      globalsPropValue<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    vueTemplate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    dts<span class="token operator">:</span> <span class="token string">&quot;src/types/auto-imports.d.ts&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 配置文件生成位置，生成之后设置为false，避免每次启动服务都生成(false:关闭自动生成)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后的使用，直接调用<code>importAssetsImg</code>方法就可以</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>importAssetsImg(&#39;empty.png&#39;)<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>看了下浏览器读取的编译文件，其实是在编译时在每个文件中为方法添加了单独的函数引入</p><p><img src="'+t+'" alt="image.png"></p>',42),u={},k=(0,a(6262).A)(u,[["render",function(n,s){const a=(0,e.g2)("ExternalLinkIcon");return(0,e.uX)(),(0,e.CE)("div",null,[p,o,i,(0,e.Lk)("p",null,[(0,e.eW)("至于原因，简短来说，就是"),l,(0,e.eW)("需要去索引整个项目的文件，编译成一个或多个单独的 js 文件；而"),c,(0,e.eW)("则是在浏览器请求对应 URL 的时候，再提供对应的文件，更详细的还是去瞅瞅 vite 的"),(0,e.Lk)("a",r,[(0,e.eW)("自荐"),(0,e.bF)(a)]),(0,e.eW)("吧")]),d])}]]),v=JSON.parse('{"path":"/blogs/article/5.liaoliaowoshizenmeyangyongvitetihuanwebpackde/liaoliaowoshizenmeyangyongvitetihuanwebpackde.html","title":"聊聊我是怎么样用vite替换webpack的","lang":"en-US","frontmatter":{"title":"聊聊我是怎么样用vite替换webpack的","date":"2022-04-28T00:00:00.000Z","categories":["article"],"tags":["前端工程化"]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"开搞","slug":"开搞","link":"#开搞","children":[{"level":3,"title":"1. 修改项目配置","slug":"_1-修改项目配置","link":"#_1-修改项目配置","children":[]},{"level":3,"title":"2. 在根目录创建vite.config.js文件","slug":"_2-在根目录创建vite-config-js文件","link":"#_2-在根目录创建vite-config-js文件","children":[]},{"level":3,"title":"3. 修改环境变量","slug":"_3-修改环境变量","link":"#_3-修改环境变量","children":[]},{"level":3,"title":"4. 配置全局的 css 变量","slug":"_4-配置全局的-css-变量","link":"#_4-配置全局的-css-变量","children":[]},{"level":3,"title":"5. 修改 index.html 文件","slug":"_5-修改-index-html-文件","link":"#_5-修改-index-html-文件","children":[]}]},{"level":2,"title":"遇到的一些问题","slug":"遇到的一些问题","link":"#遇到的一些问题","children":[{"level":3,"title":"1. TypeError: Failed to fetch dynamically imported module","slug":"_1-typeerror-failed-to-fetch-dynamically-imported-module","link":"#_1-typeerror-failed-to-fetch-dynamically-imported-module","children":[]},{"level":3,"title":"2. 不支持require","slug":"_2-不支持require","link":"#_2-不支持require","children":[]}]}],"git":{"createdTime":1737108179000,"updatedTime":1737108179000,"contributors":[{"name":"稀饭","email":"lixifan@ane56.com","commits":1}]},"filePathRelative":"blogs/article/5.聊聊我是怎么样用vite替换webpack的/聊聊我是怎么样用vite替换webpack的.md"}')}}]);