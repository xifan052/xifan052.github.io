"use strict";(self.webpackChunkxifan_blog=self.webpackChunkxifan_blog||[]).push([[3306],{167:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>b,data:()=>m});var e=a(641);const i=(0,e.Lk)("h2",{id:"vue-环境搭建",tabindex:"-1"},[(0,e.Lk)("a",{class:"header-anchor",href:"#vue-环境搭建"},[(0,e.Lk)("span",null,"vue 环境搭建")])],-1),l=(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,"1.下载安装node")],-1),t={href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Fv)('<ul><li>2.替换 npm 源</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> cnpm <span class="token parameter variable">--registry</span><span class="token operator">=</span>registry.npm.taobao.org\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>3.安装 vue-cli 脚手架</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># vue-cli 2.x安装</span>\n  cnpm <span class="token function">install</span> vue-cli <span class="token parameter variable">-g</span>\n  选取项目文件夹\n  cmd进入项目文件夹，执行 vue init webpack + 项目名称\n\n<span class="token comment"># vue-cli 3.x/4.x安装</span>\n  <span class="token function">npm</span> uninstall vue-cli <span class="token parameter variable">-g</span> <span class="token punctuation">(</span>如果之前没有装旧版本可忽略<span class="token punctuation">)</span>\n  <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> @vue/cli\n  选取项目文件夹\n  vue create + 项目名称\n  vue <span class="token parameter variable">--version</span> 检查版本是否安装正确\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',4),p={href:"https://github.com/vuejs/vue-devtools#vue-devtools",target:"_blank",rel:"noopener noreferrer"},c=(0,e.Fv)('<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>  <span class="token comment"># 使用npm安装</span>\n  <span class="token function">npm</span> <span class="token function">install</span> webpack webpack-cli –g <span class="token comment">#如首次安装环境需安装webpack</span>\n  <span class="token function">npm</span> <span class="token function">install</span> <span class="token punctuation">(</span>Or <span class="token function">yarn</span> <span class="token function">install</span> <span class="token keyword">if</span> you are using <span class="token function">yarn</span> as the package manager<span class="token punctuation">)</span>\n  <span class="token function">npm</span> run build\n  <span class="token comment"># 使用yarn安装</span>\n  <span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> <span class="token function">yarn</span> <span class="token comment"># 安装yarn</span>\n  <span class="token function">yarn</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org <span class="token parameter variable">--global</span> <span class="token comment"># 设置淘宝镜像</span>\n  <span class="token function">yarn</span> config <span class="token builtin class-name">set</span> disturl https://npm.taobao.org/dist <span class="token parameter variable">--global</span> <span class="token comment"># 设置淘宝镜像</span>\n  <span class="token function">yarn</span> config get registry （如果上面配置正确这个命令会输出淘宝镜像地址）\n  <span class="token function">yarn</span> <span class="token function">install</span>\n  <span class="token function">yarn</span> run build\n  <span class="token comment">######################</span>\n  Open Chrome extension page<span class="token punctuation">(</span>打开谷歌扩展页面<span class="token punctuation">)</span>\n  Check <span class="token string">&quot;developer mode&quot;</span><span class="token punctuation">(</span>打开开发者模式<span class="token punctuation">)</span>\n  Click <span class="token string">&quot;load unpacked extension&quot;</span>, and choose shells/chrome.<span class="token punctuation">(</span>点击“加载已解压的扩展程序”，选择shells/chrome文件夹<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="脚手架初步使用及介绍" tabindex="-1"><a class="header-anchor" href="#脚手架初步使用及介绍"><span>脚手架初步使用及介绍</span></a></h2><hr><h3 id="cli3-cli4-优点" tabindex="-1"><a class="header-anchor" href="#cli3-cli4-优点"><span>cli3/cli4 优点</span></a></h3><ul><li>可以使用 loadsh 语法</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">&lt;</span>%<span class="token operator">=</span> VALUE %<span class="token operator">&gt;</span> 用来做不转义插值；\n<span class="token operator">&lt;</span>%- VALUE %<span class="token operator">&gt;</span> 用来做 HTML 转义插值；\n<span class="token operator">&lt;</span>% expression %<span class="token operator">&gt;</span> 用来描述 JavaScript 流程控制。\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>preload 预先加载</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code> <span class="token punctuation">[</span><span class="token variable"><span class="token variable">`</span><span class="token operator">&lt;</span>link <span class="token assign-left variable">rel</span><span class="token operator">=</span><span class="token string">&quot;preload&quot;</span><span class="token operator">&gt;</span><span class="token variable">`</span></span><span class="token punctuation">]</span>\n是一种 resource hint，用来指定页面加载后很快会被用到的资源，所以在页面加载的过程中，我们希望在浏览器开始主体渲染之前尽早 preload。\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>prefetch 空闲加载</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token variable"><span class="token variable">`</span><span class="token operator">&lt;</span>link <span class="token assign-left variable">rel</span><span class="token operator">=</span><span class="token string">&quot;prefetch&quot;</span><span class="token operator">&gt;</span><span class="token variable">`</span></span><span class="token punctuation">]</span>\n是一种 resource hint，用来告诉浏览器在页面加载完成后，利用空闲时间提前获取用户未来可能会访问的内容。\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>兼容低版浏览器，可自动打包两个包。支持 ES2015+ 的浏览器一个包，不支持 ES2015+ 的浏览器一个包</p></li><li><p>隐藏了大部分 webpack 的配置，简化配置</p></li></ul><h3 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h3>',12),r=(0,e.Lk)("li",null,"使用 vue create + 项目名称 创建新项目",-1),u=(0,e.Lk)("li",null,"通过 vue ui 命令以图形化界面创建和管理项目",-1),d={href:"https://cli.vuejs.org/zh/guide/plugins-and-presets.html#%E6%8F%92%E4%BB%B6",target:"_blank",rel:"noopener noreferrer"},v=(0,e.Fv)('<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>例如：\nvue <span class="token function">add</span> @vue/eslint  //安装eslint\nvue <span class="token function">add</span> router   //安装router\nvue <span class="token function">add</span> vuex   //安装vuex\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建项目" tabindex="-1"><a class="header-anchor" href="#创建项目"><span>创建项目</span></a></h3><ul><li>首先选择配置方案(default:默认配置，Manually select features:手动配置)</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>? Please pick a preset: <span class="token punctuation">(</span>Use arrow keys<span class="token punctuation">)</span>\n<span class="token operator">&gt;</span> default <span class="token punctuation">(</span>babel, eslint<span class="token punctuation">)</span>\n  Manually <span class="token keyword">select</span> features\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>选择需要安装的插件</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>\n? Please pick a preset: Manually <span class="token keyword">select</span> features\n? Check the features needed <span class="token keyword">for</span> your project:\n<span class="token operator">&gt;</span><span class="token punctuation">(</span>*<span class="token punctuation">)</span> Babel\n <span class="token punctuation">(</span> <span class="token punctuation">)</span> TypeScript\n <span class="token punctuation">(</span> <span class="token punctuation">)</span> Progressive Web App <span class="token punctuation">(</span>PWA<span class="token punctuation">)</span> Support\n <span class="token punctuation">(</span>*<span class="token punctuation">)</span> Router\n <span class="token punctuation">(</span>*<span class="token punctuation">)</span> Vuex\n <span class="token punctuation">(</span>*<span class="token punctuation">)</span> CSS Pre-processors\n <span class="token punctuation">(</span>*<span class="token punctuation">)</span> Linter / Formatter\n <span class="token punctuation">(</span> <span class="token punctuation">)</span> Unit Testing\n <span class="token punctuation">(</span> <span class="token punctuation">)</span> E2E Testing\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>到这再重新确认一遍刚刚选择的配置，然后选择要不要使用 history mode，一般都是用hash</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>\n? Please pick a preset: Manually <span class="token keyword">select</span> features\n? Check the features needed <span class="token keyword">for</span> your project: Babel, Router, Vuex, CSS Pre-processors, Linter\n? Use <span class="token function">history</span> mode <span class="token keyword">for</span> router? <span class="token punctuation">(</span>Requires proper server setup <span class="token keyword">for</span> index fallback <span class="token keyword">in</span> production<span class="token punctuation">)</span> <span class="token punctuation">(</span>Y/n<span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>到这就是选择要使用哪种 css 预编译器</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>? Please pick a preset: Manually <span class="token keyword">select</span> features\n? Check the features needed <span class="token keyword">for</span> your project: Babel, Router, Vuex, CSS Pre-processors, Linter\n? Use <span class="token function">history</span> mode <span class="token keyword">for</span> router? <span class="token punctuation">(</span>Requires proper server setup <span class="token keyword">for</span> index fallback <span class="token keyword">in</span> production<span class="token punctuation">)</span> Yes\n? Pick a CSS pre-processor <span class="token punctuation">(</span>PostCSS, Autoprefixer and CSS Modules are supported by default<span class="token punctuation">)</span>: <span class="token punctuation">(</span>Use arrow keys<span class="token punctuation">)</span>\n  Sass/SCSS <span class="token punctuation">(</span>with dart-sass<span class="token punctuation">)</span>\n  Sass/SCSS <span class="token punctuation">(</span>with node-sass<span class="token punctuation">)</span>\n<span class="token operator">&gt;</span> Less\n  Stylus\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>选择 ESLint 代码校验规则，提供一个插件化的 javascript 代码检测工具，这里我选择的是 ESLint + Prettier</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>? Please pick a preset: Manually <span class="token keyword">select</span> features\n? Check the features needed <span class="token keyword">for</span> your project: Babel, Router, Vuex, CSS Pre-processors, Linter\n? Use <span class="token function">history</span> mode <span class="token keyword">for</span> router? <span class="token punctuation">(</span>Requires proper server setup <span class="token keyword">for</span> index fallback <span class="token keyword">in</span> production<span class="token punctuation">)</span> Yes\n? Pick a CSS pre-processor <span class="token punctuation">(</span>PostCSS, Autoprefixer and CSS Modules are supported by default<span class="token punctuation">)</span>: Less\n? Pick a linter / formatter config: <span class="token punctuation">(</span>Use arrow keys<span class="token punctuation">)</span>\n<span class="token operator">&gt;</span> ESLint with error prevention only\n  ESLint + Airbnb config\n  ESLint + Standard config\n  ESLint + Prettier\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>选择什么时候进行代码校验(Lint on save:保存就检查,Lint and fix on commit:fix 或者 commit 的时候检查)</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>? Please pick a preset: Manually <span class="token keyword">select</span> features\n? Check the features needed <span class="token keyword">for</span> your project: Babel, Router, Vuex, CSS Pre-processors, Linter\n? Use <span class="token function">history</span> mode <span class="token keyword">for</span> router? <span class="token punctuation">(</span>Requires proper server setup <span class="token keyword">for</span> index fallback <span class="token keyword">in</span> production<span class="token punctuation">)</span> Yes\n? Pick a CSS pre-processor <span class="token punctuation">(</span>PostCSS, Autoprefixer and CSS Modules are supported by default<span class="token punctuation">)</span>: Less\n? Pick a linter / formatter config: Prettier\n? Pick additional lint features:\n<span class="token operator">&gt;</span> <span class="token punctuation">(</span>*<span class="token punctuation">)</span> Lint on save\n  <span class="token punctuation">(</span> <span class="token punctuation">)</span> Lint and fix on commit\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里就是选择保存配置放在哪个文件中,第一个表示存放到独立文件中，第二个表示存放到 package.json，这里选择 package.json</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>\n? Please pick a preset: Manually <span class="token keyword">select</span> features\n? Check the features needed <span class="token keyword">for</span> your project: Babel, Router, Vuex, CSS Pre-processors, Linter\n? Use <span class="token function">history</span> mode <span class="token keyword">for</span> router? <span class="token punctuation">(</span>Requires proper server setup <span class="token keyword">for</span> index fallback <span class="token keyword">in</span> production<span class="token punctuation">)</span> Yes\n? Pick a CSS pre-processor <span class="token punctuation">(</span>PostCSS, Autoprefixer and CSS Modules are supported by default<span class="token punctuation">)</span>: Less\n? Pick a linter / formatter config: Prettier\n? Pick additional lint features: Lint on save\n? Where <span class="token keyword">do</span> you prefer placing config <span class="token keyword">for</span> Babel, ESLint, etc.? <span class="token punctuation">(</span>Use arrow keys<span class="token punctuation">)</span>\n  In dedicated config files\n<span class="token operator">&gt;</span> In package.json\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>这里就是选择要不要保存项目配置放在下一个项目使用，这个看个人意愿，一般就直接下次再配置就行了</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>? Please pick a preset: Manually <span class="token keyword">select</span> features\n? Check the features needed <span class="token keyword">for</span> your project: Babel, Router, Vuex, CSS Pre-processors, Linter\n? Use <span class="token function">history</span> mode <span class="token keyword">for</span> router? <span class="token punctuation">(</span>Requires proper server setup <span class="token keyword">for</span> index fallback <span class="token keyword">in</span> production<span class="token punctuation">)</span> Yes\n? Pick a CSS pre-processor <span class="token punctuation">(</span>PostCSS, Autoprefixer and CSS Modules are supported by default<span class="token punctuation">)</span>: Less\n? Pick a linter / formatter config: Prettier\n? Pick additional lint features: Lint on save\n? Where <span class="token keyword">do</span> you prefer placing config <span class="token keyword">for</span> Babel, ESLint, etc.? In package.json\n? Save this as a preset <span class="token keyword">for</span> future projects? <span class="token punctuation">(</span>y/N<span class="token punctuation">)</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',18),k={},b=(0,a(6262).A)(k,[["render",function(n,s){const a=(0,e.g2)("ExternalLinkIcon");return(0,e.uX)(),(0,e.CE)("div",null,[i,l,(0,e.Lk)("p",null,[(0,e.eW)("在 nodejs"),(0,e.Lk)("a",t,[(0,e.eW)("官网"),(0,e.bF)(a)]),(0,e.eW)("下载正式版安装包，根据提示按照步骤安装")]),o,(0,e.Lk)("ul",null,[(0,e.Lk)("li",null,[(0,e.eW)("4.安装浏览器调试工具"),(0,e.Lk)("a",p,[(0,e.eW)("vue devtools"),(0,e.bF)(a)])])]),c,(0,e.Lk)("ul",null,[r,u,(0,e.Lk)("li",null,[(0,e.eW)("使用 "),(0,e.Lk)("a",d,[(0,e.eW)("vue add + 插件名称"),(0,e.bF)(a)]),(0,e.eW)(" 安装 cli 插件")])]),v])}]]),m=JSON.parse('{"path":"/blogs/note/vue/3.vue-clidajianjichubushiyong.html","title":"3.vue环境搭建及初步使用","lang":"en-US","frontmatter":{"title":"3.vue环境搭建及初步使用","date":"2017-05-25T00:00:00.000Z","categories":["note"],"tags":["Vue"]},"headers":[{"level":2,"title":"vue 环境搭建","slug":"vue-环境搭建","link":"#vue-环境搭建","children":[]},{"level":2,"title":"脚手架初步使用及介绍","slug":"脚手架初步使用及介绍","link":"#脚手架初步使用及介绍","children":[{"level":3,"title":"cli3/cli4 优点","slug":"cli3-cli4-优点","link":"#cli3-cli4-优点","children":[]},{"level":3,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":3,"title":"创建项目","slug":"创建项目","link":"#创建项目","children":[]}]}],"git":{"createdTime":1737108179000,"updatedTime":1737108179000,"contributors":[{"name":"稀饭","email":"lixifan@ane56.com","commits":1}]},"filePathRelative":"blogs/note/vue/3.vue-cli搭建及初步使用.md"}')}}]);